#!/usr/bin/env bash

## Files and Directories
DIR="$HOME/.config/bspwm/polybar"
SFILE="$DIR/system.ini"
RFILE="$DIR/.system"

## Get system variable values for various modules
get_values() {
    CARD=$(light -L | grep 'backlight' | head -n1 | cut -d'/' -f3)
    BATTERY=$(upower -i `upower -e | grep 'BAT'` | grep 'native-path' | cut -d':' -f2 | tr -d '[:blank:]')
    ADAPTER=$(upower -i `upower -e | grep 'AC'` | grep 'native-path' | cut -d':' -f2 | tr -d '[:blank:]')
    INTERFACES=$(lshw -class network -json 2>/dev/null)
    INTERFACE_WIRED=$(echo ${INTERFACES}  | jq '. | map(select(.description == "Ethernet interface")) | .[0]?.logicalname' -r)
    INTERFACE_WIRELESS=$(echo ${INTERFACES}  | jq '. | map(select(.description == "Wireless interface")) | .[0]?.logicalname' -r)
}

## Write values to `system` file
set_values() {
    echo '[system]' > $SFILE

    if [[ "$ADAPTER" ]]; then
        echo "adapter = ${ADAPTER}" >> ${SFILE}
    fi
    if [[ "$BATTERY" ]]; then
        echo "battery = ${BATTERY}" >> ${SFILE}
    fi
    if [[ "$CARD" ]]; then
        echo "graphics_card = ${CARD}" >> ${SFILE}
    fi

    if [[ "$INTERFACE_WIRED" ]]; then
        echo "network_interface_wired = ${INTERFACE_WIRED}" >> ${SFILE}
    fi
    if [[ "$INTERFACE_WIRELESS" ]]; then
        echo "network_interface_wireless = ${INTERFACE_WIRELESS}" >> ${SFILE}
    fi
}

## Launch Polybar with selected style
launch_bar() {
    CARD=$(light -L | grep 'backlight' | head -n1 | cut -d'/' -f3)
    BATTERY=$(upower -i `upower -e | grep 'BAT'` | grep 'native-path' | cut -d':' -f2 | tr -d '[:blank:]')

    declare -a mainbar_right_modules=()
    if [[ ${CARD} ]]; then
        mainbar_right_modules+=(backlight)
    fi
    mainbar_right_modules+=(volume net-wired net-wireless)
    if [[ ${BATTERY} ]]; then
        mainbar_right_modules+=(battery)
    fi
    seperator=' dot '
    joined_modules=$(printf "${seperator}%s" ${mainbar_right_modules[@]})
    export MAINBAR_RIGHT="${joined_modules:${#seperator}} dot-alt LD sysmenu RD"

    # Terminate already running bar instances
    killall -q polybar

    # Wait until the processes have been shut down
    while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done

    IFS_BAK=$IFS
    IFS=$'\n'
    for connected in $(xrandr -q | grep -w connected); do
        monitor=$(echo -n $connected | cut -d ' ' -f1)
        if [[ $connected == *primary* ]]; then
            bar=main
        else
            bar=sub
        fi
        MONITOR=${monitor} polybar -q ${bar} -c "$DIR"/config.ini &
    done
    IFS=$IFS_BAK
}

# Execute functions
if [[ ! -f "$RFILE" ]]; then
    get_values
    set_values
    touch ${RFILE}
fi
launch_bar
