#!/usr/bin/env bash

## Copyright (C) 2020-2021 Aditya Shakya <adi1090x@gmail.com>
## Everyone is permitted to copy and distribute copies of this file under GNU-GPL3

## Environtment
DIR="${HOME}/.config/bspwm"
export PATH="${PATH}:${DIR}/bin"
CUSTOM_CONF="${DIR}/custom_conf"

if [[ -f "${CUSTOM_CONF}" ]]; then
    source ${CUSTOM_CONF}
fi

## Get colors from .Xresources -------------------------------#
xrdb ~/.Xresources
getcolors() {
    FOREGROUND=$(xrdb -query | grep 'foreground:'| awk '{print $NF}')
    BACKGROUND=$(xrdb -query | grep 'background:'| awk '{print $NF}')
    BLACK=$(xrdb -query | grep 'color0:'| awk '{print $NF}')
    RED=$(xrdb -query | grep 'color1:'| awk '{print $NF}')
    GREEN=$(xrdb -query | grep 'color2:'| awk '{print $NF}')
    YELLOW=$(xrdb -query | grep 'color3:'| awk '{print $NF}')
    BLUE=$(xrdb -query | grep 'color4:'| awk '{print $NF}')
    MAGENTA=$(xrdb -query | grep 'color5:'| awk '{print $NF}')
    CYAN=$(xrdb -query | grep 'color6:'| awk '{print $NF}')
    WHITE=$(xrdb -query | grep 'color7:'| awk '{print $NF}')
}
getcolors

## Configurations --------------------------------------------#
workspaces() {
    if [[ "${REVERSE_MONITOR}" == "true" ]]; then
        monitors=$(xrandr -q | grep -w connected | cut -d ' ' -f1 | tac)
    else
        monitors=$(xrandr -q | grep -w connected | cut -d ' ' -f1)
    fi
    monitors_connected=$(echo $monitors | wc -w)

    bspc wm --reorder-monitors $monitors

    start_from=1
    per_monitor=$((10 / monitors_connected))

    for monitor in $monitors; do
        bspc monitor ${monitor} -d $(seq $start_from $((start_from + per_monitor - 1)))
        start_from=$((start_from + per_monitor))
    done
}
workspaces

bspc config border_width 5
bspc config window_gap 5
bspc config split_ratio 0.50

bspc config focused_border_color "$BLUE"
bspc config normal_border_color "$BACKGROUND"
bspc config active_border_color "$MAGENTA"
bspc config presel_feedback_color "$GREEN"

bspc config borderless_monocle true
bspc config gapless_monocle true
bspc config paddingless_monocle true
bspc config single_monocle false
bspc config focus_follows_pointer false

## Window rules ----------------------------------------------#

source "${DIR}/rules"

## Autostart -------------------------------------------------#

# Kill if already running
killall -9 xsettingsd sxhkd dunst ksuperkey xfce4-power-manager

# Lauch notification daemon
dunst \
-geom "280x50-10+42" -frame_width "1" -font "FiraCode Nerd Font Mono 9" \
-lb "$BACKGROUND" -lf "$FOREGROUND" -lfr "$BLUE" \
-nb "$BACKGROUND" -nf "$FOREGROUND" -nfr "$BLUE" \
-cb "$BACKGROUND" -cf "$RED" -cfr "$RED" &

# Lauch xsettingsd daemon
if [[ -x $(command -v xsettingsd) ]]; then
    xsettingsd &
fi

# polkit agent
if [[ -x $(command -v xfce-polkit) ]] && [[ ! `pidof xfce-polkit` ]]; then
    /usr/lib/xfce-polkit/xfce-polkit &
fi

# Lauch keybindings daemon
sxhkd &

# Enable Super Keys For Menu
if [[ -x $(command -v ksuperkey) ]]; then
    ksuperkey -e 'Super_L=Alt_L|F1' &
    ksuperkey -e 'Super_R=Alt_L|F1' &
fi

# Enable power management
if [[ -x $(command -v xfce4-power-manager) ]]; then
    xfce4-power-manager &
fi

# Fix cursor
xsetroot -cursor_name left_ptr

# Restore wallpaper
bash $HOME/.fehbg

# Start mpd
# exec mpd &

# Start bspwm scripts
bspcolors
bspbar
bspcomp
bspfloat &
